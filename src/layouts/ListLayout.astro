---
import type {Page, CollectionEntry} from "astro:content";

import FormattedDate from "../components/FormattedDate.astro";
import Link from "../components/Link.astro";
import Pagination from "../components/Pagination.astro";
import RootLayout from "./RootLayout.astro";
import Tag from "../components/Tag.astro";

interface Props {
    title: string;
    description: string;
    page: Page<CollectionEntry<'blog'>[]>;
}

const {title, description, page} = Astro.props;
const hasDefaultSlot = Astro.slots.has('default');

export const prerender = true;
---

<RootLayout {title} {description}>
    <div class="section-container animate-fade-in">
        <div class="max-w-4xl mx-auto">
            <div class="mb-12">
                <p class="section-title">Blog</p>
                <h1 class="text-4xl md:text-5xl font-bold mb-4">
                    {title}
                </h1>
                {hasDefaultSlot && (
                    <div class="prose text-dark-text-secondary py-4">
                        <slot/>
                    </div>
                )}
            </div>
            
            <div class="space-y-8">
                {!page.data.length && (
                    <div class="card text-center py-12">
                        <p class="text-dark-text-secondary">No posts found</p>
                    </div>
                )}
                
                {page.data.map(({slug, data: {date, title, summary, tags}}) => (
                    <article class="card hover:border-primary-500 transition-all group">
                        <div class="space-y-4 md:grid md:grid-cols-4 md:gap-6 md:space-y-0">
                            <div class="md:col-span-1">
                                <time class="text-sm text-dark-text-muted font-mono">
                                    <FormattedDate date={date}/>
                                </time>
                            </div>
                            <div class="md:col-span-3 space-y-3">
                                <div>
                                    <h2 class="text-2xl font-bold mb-3 group-hover:text-primary-500 transition-colors">
                                        <Link href={`/blog/${slug}`} class="no-underline">
                                            {title}
                                        </Link>
                                    </h2>
                                    <div class="flex flex-wrap gap-2">
                                        {tags.map(({slug}) => (
                                            <Tag slug={slug}/>
                                        ))}
                                    </div>
                                </div>
                                <p class="text-dark-text-secondary leading-relaxed">
                                    {summary}
                                </p>
                            </div>
                        </div>
                    </article>
                ))}
            </div>
            
            {(page.url.next || page.url.prev) && (
                <div class="mt-12">
                    <Pagination page={page}/>
                </div>
            )}
        </div>
    </div>
</RootLayout>
