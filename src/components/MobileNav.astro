---
import Link from "./Link.astro";
import {NAVIGATION} from '@/consts';
---

<button aria-label="Toggle Menu" class="sm:hidden toggle-menu retro-button">
    <pre class="text-terminal-green">
 _____ 
|_____|
|_____|
|_____|
    </pre>
</button>

<div id="mobileMenuContainer"
     class="translate-x-full fixed left-0 top-0 z-10 h-full w-full transform bg-terminal-black border-r border-terminal-green duration-300 ease-in-out">
    <div class="flex justify-end">
        <button class="mr-8 mt-11 h-8 w-8 toggle-menu retro-button" aria-label="Toggle Menu">
            <pre class="text-terminal-green">
  X   X
   X X
    X
   X X
  X   X
            </pre>
        </button>
    </div>
    
    <nav class="fixed mt-8 h-full w-full">
        <pre class="ascii-divider px-12">
 /====================\
 |     MAIN MENU      |
 \====================/
        </pre>
        
        {NAVIGATION.map(({href, title}) => (
            <div class="px-12 py-4 border-b border-terminal-dim last:border-0">
                <Link 
                    href={href} 
                    class="retro-link text-2xl tracking-widest block hover:bg-terminal-green hover:text-terminal-black transition-colors"
                >
                    {title}
                </Link>
            </div>
        ))}
        
        <pre class="ascii-divider px-12 mt-8">
 [END OF MENU]
 =============
        </pre>
    </nav>
</div>

<script>
    const mobileToggleButton = document.querySelectorAll('.toggle-menu');
    const mobileMenuContainer = document.getElementById('mobileMenuContainer');

    mobileToggleButton.forEach((button) => {
        button.addEventListener('click', () => onToggleNav());
    });

    function onToggleNav() {
    const isNavHidden = !mobileMenuContainer.classList.contains('translate-x-0');
    mobileMenuContainer.classList.toggle('translate-x-full', !isNavHidden);
    mobileMenuContainer.classList.toggle('translate-x-0', isNavHidden);
    document.body.style.overflow = isNavHidden ? 'hidden' : '';
    
    // Improved terminal boot-up animation
    if (isNavHidden) {
        const links = mobileMenuContainer.querySelectorAll('a');
        links.forEach((link, index) => {
            link.style.opacity = '0';
            link.textContent = link.textContent.replace('> ', '');
            setTimeout(() => {
                link.style.opacity = '1';
                link.textContent = `> ${link.textContent}`;
            }, index * 100);
        });
    }
}
</script>

<style>
    .toggle-menu pre {
        line-height: 1;
        transition: all 0.3s ease;
    }
    
    .toggle-menu:hover pre {
        color: var(--terminal-bright);
    }
    
    #mobileMenuContainer {
        background: linear-gradient(
            to bottom,
            var(--terminal-black) 0%,
            rgba(0, 20, 0, 0.99) 100%
        );
    }
    
    #mobileMenuContainer a {
        opacity: 0;
        transition: all 0.3s ease;
    }
    
    #mobileMenuContainer.translate-x-0 {
        animation: bootUp 0.5s ease-out;
    }
    
    @keyframes bootUp {
        0% {
            opacity: 0;
        }
        50% {
            opacity: 0.5;
        }
        100% {
            opacity: 1;
        }
    }
</style>