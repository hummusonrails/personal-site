---
import RootLayout from "@/layouts/RootLayout.astro";
import Link from "@/components/Link.astro";
import tagsData from '../../data/tags.json';
import { fetchAndSortBlogPosts, excludeDrafts } from '../../functions';

const posts = await fetchAndSortBlogPosts();
const filteredPosts = posts.filter(excludeDrafts);

const tagCounts = {};
for (const post of filteredPosts) {
  const tagList = Array.isArray(post.tags) ? post.tags : [post.tags];
  for (const tag of tagList) {
    const key = tag.toLowerCase();
    tagCounts[key] = (tagCounts[key] || 0) + 1;
  }
}

const tags = Object.entries(tagsData).map(([slug, tag]) => ({
  slug,
  name: tag.name,
  count: tagCounts[slug.toLowerCase()] || 0
})).filter(tag => tag.count > 0);

export const prerender = true;
---

<RootLayout title="Tags">
  <div class="flex flex-col items-start justify-start divide-y divide-gray-200 dark:divide-gray-700 md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6 md:divide-y-0">
    <div class="space-x-2 pb-8 pt-6 md:space-y-5">
      <h1 class="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:border-r-2 md:px-6 md:text-6xl md:leading-14">
        Tags
      </h1>
    </div>
    <div class="flex max-w-lg flex-wrap">
      {!tags.length && 'No tags found.'}
      {tags.map((tag) => (
        <div class="mb-2 mr-5 mt-2" key={tag.slug}>
          <Link
            href={`/tags/${tag.slug}/1`}
            class="mr-3 text-sm font-medium uppercase text-primary-500 hover:text-primary-600 dark:hover:text-primary-400"
          >
            {tag.name}
          </Link>
          <span class="text-sm font-semibold text-gray-600 dark:text-gray-300">
            ({tag.count})
          </span>
        </div>
      ))}
    </div>
  </div>
</RootLayout>
